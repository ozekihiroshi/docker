version: "3.8"

services:
  traefik:
    image: traefik:v3.2
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.manual.acme.tlsChallenge=true"
      - "--providers.file.filename=/etc/traefik/dynamic.yaml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./certs/:/etc/traefik/certs:ro"
      - "./dynamic.yaml:/etc/traefik/dynamic.yaml:ro"
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"

  growi:
    image: weseek/growi:6
    container_name: growi
    ports:
      - 3000:3000
    links:
      - mongo:mongo
      - elasticsearch:elasticsearch
    depends_on:
      mongo:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongo:27017/growi
      - ELASTICSEARCH_URI=http://elasticsearch:9200/growi
      - PASSWORD_SEED=changeme
      - PORT=3000
      - BIND_ADDRESS=0.0.0.0
      - WEBSOCKET=true
      - APP_CORS_ALLOW_ORIGIN=*
    entrypoint: "/docker-entrypoint.sh"
    command: ["npm run migrate && node -r dotenv-flow/config --expose_gc dist/server/app.js"]
    restart: unless-stopped
    volumes:
      - growi_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.growi.rule=Host(`growi.${DOMAIN}`)"
      - "traefik.http.routers.growi.entrypoints=websecure"
      - "traefik.http.routers.growi.tls=true"
      - "traefik.http.services.growi.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https"
    networks:
      traefik_network:
        ipv4_address: 192.168.100.31

  mongo:
    image: mongo:4.4
    restart: unless-stopped
    volumes:
      - mongo_configdb:/data/configdb
      - mongo_db:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand('ping').ok", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - traefik_network

  elasticsearch:
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    build:
      context: ./elasticsearch/v7
      dockerfile: ./Dockerfile
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - LOG4J_FORMAT_MSG_NO_LOOKUPS=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - ./elasticsearch/v7/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health | grep -vq '\"status\" : \"red\"'"]
      interval: 30s
      timeout: 10s
      retries: 6
    networks:
      - traefik_network

  postgresql-server:
    image: postgres:latest
    container_name: postgresql-server
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - traefik_network

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:latest
    container_name: zabbix-server
    restart: unless-stopped
    depends_on:
      - postgresql-server
    environment:
      DB_SERVER_HOST: postgresql-server
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "10051:10051"
    volumes:
      - zabbix-server-data:/var/lib/zabbix
      - zabbix-snmptraps-data:/var/lib/zabbix/snmptraps
      - zabbix-export-data:/var/lib/zabbix/export
    networks:
      - traefik_network

  zabbix-web-nginx-pgsql:
    image: zabbix/zabbix-web-nginx-pgsql:latest
    container_name: zabbix-web
    restart: unless-stopped
    depends_on:
      - postgresql-server
      - zabbix-server
    environment:
      DB_SERVER_HOST: postgresql-server
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: ${PHP_TZ}
    ports:
      - "8081:8081"
    volumes:
      - zabbix-web-data:/usr/share/zabbix
      - ./nginx.conf:/etc/nginx/http.d/nginx.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.zabbix-web.rule=Host(`zabbix-web.${DOMAIN}`)"
      - "traefik.http.routers.zabbix-web.entrypoints=websecure"
      - "traefik.http.routers.zabbix-web.tls=true"
      - "traefik.http.services.zabbix-web.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      traefik_network:
        ipv4_address: 192.168.100.21

  zabbix-agent:
    image: zabbix/zabbix-agent:latest
    container_name: zabbix-agent
    restart: unless-stopped
    depends_on:
      - zabbix-server
    environment:
      ZBX_HOSTNAME: "zabbix-docker-agent"
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: '10051'
      ZBX_SERVER_ACTIVE: zabbix-server
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run
    privileged: true
    labels:
      - "traefik.enable=true"
    networks:
      traefik_network:
        ipv4_address: 192.168.100.11

volumes:
  postgresql-data:
  zabbix-server-data:
  zabbix-snmptraps-data:
  zabbix-export-data:
  zabbix-web-data:
  growi_data:
  mongo_configdb:
  mongo_db:
  es_data:

networks:
  traefik_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

